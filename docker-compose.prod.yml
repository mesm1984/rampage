version: '3.8'

services:
  # Application Node.js
  redbull-app:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=redbull-db
      - DB_NAME=redbull_prod
      - DB_USER=redbull_user
      - DB_PASS=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - redbull-db
    volumes:
      - app-logs:/usr/src/app/logs
    restart: unless-stopped
    networks:
      - redbull-network

  # Base de donn√©es MySQL
  redbull-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: redbull_prod
      MYSQL_USER: redbull_user
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    restart: unless-stopped
    networks:
      - redbull-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - nginx-logs:/var/log/nginx
    depends_on:
      - redbull-app
    restart: unless-stopped
    networks:
      - redbull-network

  # PhpMyAdmin (optionnel en production)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: redbull-db
      PMA_USER: redbull_user
      PMA_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - redbull-db
    restart: unless-stopped
    networks:
      - redbull-network
    profiles:
      - admin

volumes:
  mysql-data:
  app-logs:
  nginx-logs:

networks:
  redbull-network:
    driver: bridge
